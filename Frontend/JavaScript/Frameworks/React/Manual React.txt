1.Что такое React?
==================================================================================================
React - это библиотека JS. Нужна для создания пользовательского интерфейса(того, что мы видим на экране).

React работает на DOM архитектуре. Мы пишем, как должен выглядеть проект, а React дорабатывает его до такого,
состояния, чтобы он был очень быстрый и советстовал нашим ожиданиям.

2.Требования для работы с React:
==================================================================================================
1.Установить npm.
2.Установить yarn.
3.Установить Node.js.

3.Запуск React
==================================================================================================
yarn create react-app названиепроекта - создает проект react внутри папки.
yarn start - запуск проекта.


4.Компоненты React
==================================================================================================
1)Node_modules - файлы Node.js.
2)Public - 
3)Src - здесь находятся все основные файлы.
4).gitignore - файл игнорирования определенных файлов.
5)Package.json - 
6)Readme.md - документация по проекту.
7)Yarn.lock -

5.Компоненты Src.
==================================================================================================
1)App.js - основной файл JS, к которому присоединяются другие компоненты(модули).
2)index.js - 
3)App.test.js- 
4)reportWebVitals.js -
5)setupTests.js - 
6)App.css - файл стилей App.js.
7)index.js - файл стилей index.js.

5.1.Компонент App.js.
==================================================================================================
В верхней части импортируются в этот компонент, другие компоненты.

В центральной части прописывается основной код, похожий на HTML(но это не HTML).Чтобы, добавить
компонент на экран, достаточно прописать его в </>. Также внутри него можно прописать данные для Props.


6.Работа с компонентами и Props.
==================================================================================================
Компоненты бывают трех типов:
1.Функциональный компонент.(rfc - снипет для создания).
2.Классовый компонент.(rсс - снипет для создания).
3.Компонент с использованием стрелочной функции.(rafc - снипет для создания).

Props - это значения, которые мы хотим статически передать нашему компоненту.

Пример:
1)Функциональный компонент:

import React from 'react'

export default function Fcomponent(props) {
  return (
    <div>
        <h1>Hello,{props.name} </h1>
    </div>
  )
}

2)Классовый компонент:

import React, { Component } from 'react'
import { Menu } from './Menu'

export default class Ccomponent extends Component {
  render() {
    return (
      <div>
          <Menu/>
          <h1>Class Component{this.props.name}</h1>
      </div>
    )
  }
}

Ccomponent.defaultProps = {name: "Alexey"}

3)Компонент со стрелочной функцией:

